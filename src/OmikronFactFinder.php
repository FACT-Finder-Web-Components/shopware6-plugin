<?php

declare(strict_types=1);

namespace Omikron\FactFinder\Shopware6;

use Omikron\FactFinder\Shopware6\Export\Field\FieldInterface;
use Shopware\Core\Framework\Api\Context\SystemSource;
use Shopware\Core\Framework\Context;
use Shopware\Core\Framework\Plugin;
use Shopware\Core\Framework\Plugin\Context\InstallContext;
use Shopware\Core\System\CustomField\CustomFieldTypes;
use Symfony\Component\DependencyInjection\ContainerBuilder;
use Shopware\Core\Framework\DataAbstractionLayer\EntityRepositoryInterface;

class OmikronFactFinder extends Plugin
{
    public function install(InstallContext $installContext): void
    {
        parent::install($installContext); // TODO: Change the autogenerated stub
        /** @var EntityRepositoryInterface $customFieldRepository */
        $customFieldRepository = $installContext->getPlugin()->container->get('custom_field.repository');
        $customFieldRepository->create([[
            'name' => 'test',
            'global' => true,
            'config' => [
                'label' => [
                    'de-DE' => 'Beispiel Plugin Zusatzfeld Set',
                    'en-GB' => 'Example plugin custom field set'
                ]
            ],
            'relations' => [[
                'entityName' => 'category'
            ]],
            'customFields' => [
                [
                    'name' => 'swag_example_size',
                    'type' => CustomFieldTypes::INT,
                    'config' => [
                        'label' => [
                            'en-GB' => 'English custom field label',
                            'de-DE' => 'German custom field label'
                        ],
                        'customFieldPosition' => 1
                    ]
                ],
                [
                    'name' => 'swag_example_color',
                    'type' => CustomFieldTypes::TEXT,
                    'config' => [
                        'label' => [
                            'en-GB' => 'English custom field label',
                            'de-DE' => 'German custom field label'
                        ],
                        'customFieldPosition' => 2
                    ]
                ]
            ]
        ]], new Context(new SystemSource()));
    }

    public function build(ContainerBuilder $container): void
    {
        parent::build($container);
        $container->registerForAutoconfiguration(FieldInterface::class)->addTag('factfinder.export.field');
    }
}
